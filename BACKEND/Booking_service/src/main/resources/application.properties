spring.application.name=booking-service
spring.datasource.url=jdbc:mysql://localhost:3306/bookingdb
server.port=9092
# ===================================================================
# MySQL DATABASE CONFIGURATION
# ===================================================================

# Database Connection URL
# Replace 'cab_booking_db' with your actual database name if it's different.


# Database Credentials
# Replace 'root' and 'password' with your MySQL username and password.
spring.datasource.username=root
spring.datasource.password=root

# Specify the MySQL driver class
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# ===================================================================
# JPA & HIBERNATE CONFIGURATION
# ===================================================================

# Hibernate ddl-auto:
#   - 'update': Updates the schema if there are changes in your @Entity classes.
#   - 'create': Creates the schema, destroying previous data.
#   - 'validate': Validates the schema, makes no changes to the database.
#   - 'none': Does nothing to the schema.
# 'update' is good for development, but for production, you should use a migration tool like Flyway or Liquibase.
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries generated by Hibernate in the console (useful for debugging)
spring.jpa.show-sql=true

# Specify the SQL dialect for Hibernate to generate optimized SQL for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Properties - MUST match Authentication service
jwt.secret=cbsCabBookingAppSecretKey@2025!ExtraSecureKey

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

